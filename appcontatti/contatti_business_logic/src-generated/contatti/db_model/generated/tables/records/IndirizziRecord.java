/*
 * This file is generated by jOOQ.
 */
package contatti.db_model.generated.tables.records;


import contatti.db_model.generated.tables.Indirizzi;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndirizziRecord extends TableRecordImpl<IndirizziRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>INDIRIZZI.NOME</code>.
     */
    public void setNome(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>INDIRIZZI.NOME</code>.
     */
    public String getNome() {
        return (String) get(0);
    }

    /**
     * Setter for <code>INDIRIZZI.NUMTELEFONO</code>.
     */
    public void setNumtelefono(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>INDIRIZZI.NUMTELEFONO</code>.
     */
    public String getNumtelefono() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Indirizzi.INDIRIZZI.NOME;
    }

    @Override
    public Field<String> field2() {
        return Indirizzi.INDIRIZZI.NUMTELEFONO;
    }

    @Override
    public String component1() {
        return getNome();
    }

    @Override
    public String component2() {
        return getNumtelefono();
    }

    @Override
    public String value1() {
        return getNome();
    }

    @Override
    public String value2() {
        return getNumtelefono();
    }

    @Override
    public IndirizziRecord value1(String value) {
        setNome(value);
        return this;
    }

    @Override
    public IndirizziRecord value2(String value) {
        setNumtelefono(value);
        return this;
    }

    @Override
    public IndirizziRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IndirizziRecord
     */
    public IndirizziRecord() {
        super(Indirizzi.INDIRIZZI);
    }

    /**
     * Create a detached, initialised IndirizziRecord
     */
    public IndirizziRecord(String nome, String numtelefono) {
        super(Indirizzi.INDIRIZZI);

        setNome(nome);
        setNumtelefono(numtelefono);
        resetChangedOnNotNull();
    }
}
